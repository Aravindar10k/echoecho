import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Step 1: Load the dataset
file_path = "C:\\Users\\balaj\\Desktop\\student_exam_data_new.csv"  # Update with the actual file path
data = pd.read_csv(file_path)

# Inspect the data to check column names and structure
print(data.head())  # Displays the first few rows of the dataset
print(data.columns)  # Displays column names

# Select the features and target variable
X = data[['Previous Exam Score']]  # Replace with appropriate columns if needed
y = data['Pass/Fail']  # Replace with the appropriate column for target variable

# Standardize the feature(s)
scaler = StandardScaler()
X = scaler.fit_transform(X)

# Step 2: Split the data into training and testing sets (70% train, 30% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 3: Initialize and train the Logistic Regression model with L2 regularization
logistic_reg_model = LogisticRegression(penalty='l2', C=1.0, random_state=42)

# Train the model
logistic_reg_model.fit(X_train, y_train)

# Step 4: Make predictions and evaluate the model
y_pred = logistic_reg_model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)

# Output results
print(f"Accuracy: {accuracy}")
print("Classification Report:")
print(classification_rep)
